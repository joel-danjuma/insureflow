services:
  db:
    image: postgres:14-alpine
    container_name: insureflow_db
    env_file:
      - app.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    container_name: insureflow_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: insureflow_app
    # Create an app.env file from env.example and fill in the values
    env_file:
      - app.env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: ["/app/scripts/start.sh"]

  dashboard:
    build: .
    container_name: insureflow_dashboard
    ports:
      - "8501:8501"
    depends_on:
      - app
    volumes:
      - .:/app
    command: ["streamlit", "run", "app/dashboard.py"]

volumes:
  postgres_data:
  redis_data: